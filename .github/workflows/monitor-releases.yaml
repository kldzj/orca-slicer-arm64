name: Monitor OrcaSlicer Releases

on:
  schedule:
    - cron: '0 */2 * * *'
  workflow_dispatch:

permissions:
  contents: write
  actions: write

jobs:
  check-releases:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Get latest OrcaSlicer release
        id: get_release
        run: |
          # Get the latest stable release (excluding pre-releases)
          LATEST_RELEASE=$(curl -s \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/SoftFever/OrcaSlicer/releases" | \
            jq -r '.[] | select(.prerelease == false) | .tag_name' | \
            head -n 1)
          
          if [ -z "$LATEST_RELEASE" ]; then
            echo "No stable release found"
            exit 1
          fi
          
          VERSION="${LATEST_RELEASE#v}"
          echo "Latest OrcaSlicer release: $LATEST_RELEASE (version: $VERSION)"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=$LATEST_RELEASE" >> $GITHUB_OUTPUT
      
      - name: Check if ARM64 build exists
        id: check_build
        run: |
          VERSION="${{ steps.get_release.outputs.version }}"
          ARM64_TAG="v${VERSION}-arm64"
          
          # Check if we already have an ARM64 build for this version
          EXISTING_RELEASE=$(curl -s \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/${ARM64_TAG}" | \
            jq -r '.tag_name // empty')
          
          if [ -n "$EXISTING_RELEASE" ]; then
            echo "ARM64 build already exists for version $VERSION: $ARM64_TAG"
            echo "build_exists=true" >> $GITHUB_OUTPUT
          else
            echo "No ARM64 build found for version $VERSION"
            echo "build_exists=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Trigger ARM64 build
        if: steps.check_build.outputs.build_exists == 'false'
        run: |
          VERSION="${{ steps.get_release.outputs.version }}"
          
          echo "Triggering ARM64 build for OrcaSlicer v$VERSION"
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/actions/workflows/build-arm64.yaml/dispatches" \
            -d "{\"ref\":\"main\",\"inputs\":{\"orca_version\":\"$VERSION\"}}"
          
          echo "âœ… Build workflow triggered for version $VERSION"
      
      - name: Summary
        run: |
          VERSION="${{ steps.get_release.outputs.version }}"
          BUILD_EXISTS="${{ steps.check_build.outputs.build_exists }}"
          
          if [ "$BUILD_EXISTS" == "true" ]; then
            echo "âœ… ARM64 build already exists for OrcaSlicer v$VERSION"
          else
            echo "ðŸš€ Triggered new ARM64 build for OrcaSlicer v$VERSION"
          fi
